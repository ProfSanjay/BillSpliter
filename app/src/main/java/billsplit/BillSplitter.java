/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package billsplit;
// import /resources/Item.java; TODO: Move Item class to resources folder
import java.util.*;

public class BillSplitter {
    public static List<Item> listItems(int numItems, Scanner scanner) {
        System.out.println("Please enter the information for each item!");

        List<Item> items = new ArrayList<>();

        // Loop to have user information for each item --> TODO: update to button (add one at a time?)
        // TODO: On press --> runs function
        // TODO: Change println()s to dialouge readouts
        for (int i = 0; i < numItems; i++) {
            System.out.print("Please enter the item info:\nName: ");
            String itemName = scanner.nextLine();

            System.out.println("How many people are responsible for this bill?");
            int payeeCount = scanner.nextInt();
            scanner.nextLine(); // Clear input?? --> Need to test

            System.out.println("Enter the payees' names: ");
            List<String> payees = new ArrayList<>();
            boolean allPayees = false;

            while(!allPayees) {     // Loop to add all payees' names
                String payeeName = scanner.nextLine();
                payees.add(payeeName);

                if (payees.size() == payeeCount)
                    allPayees = true;
            }

            System.out.println("What is the price of the item?");
            double amountOwed = scanner.nextDouble();
            scanner.nextLine();
            System.out.println();   // Blank line for readabilty

            Item newItem = new Item(itemName, payees, amountOwed);

            items.add(newItem);
        }

        return items;
    }

    public static void calcDiscount(List<Item> items, double balanceDue) {
        // Get the total sum of every item
        double itemSum = 0.0;

        for (int i = 0; i < items.size(); i ++) {
            itemSum += items.get(i).getAmount();
        }

        // Check to see if there is a discount --> Yes: Calculate discount || No: Set discount on each item = 0
        if (itemSum == balanceDue) {
            for (int i = 0; i < items.size(); i++) {
                items.get(i).setDiscount(0.0);
            }
            
            System.out.println("There is no discount to split between payees.");

        }
        
        else {  // Note: Maybe optional for user? 
            double totalDiscount = itemSum - balanceDue;
            double discountPerc = totalDiscount / itemSum;
            System.out.printf("The total discount is $%.2f, which works out to an overall discount of %.2f%%%n", totalDiscount, discountPerc*100);

            // Split the discount between each item
            System.out.println("\nEach item will recieve a discount of: ");
            for (int i = 0; i < items.size(); i++) {
                System.out.print(items.get(i).getItemName());
                double itemDiscount = (items.get(i).getAmount() / itemSum) * totalDiscount;
                items.get(i).setDiscount(itemDiscount);
                System.out.printf(" Discount Portion: $%.2f%n", itemDiscount);
            }
        }
        
    }

    public static Map<String, Double> splitBalance(List<Item> items) {
        Map<String, Double> balanceOwed = new HashMap<>();

        for (int i = 0; i < items.size(); i++) {
            List<String> payees = items.get(i).getPayees();  // Lists the names of the payees
            double carAmount = items.get(i).getAmount();     // Lists the total value of the insurance owed

            for (int j = 0; j < payees.size(); j++) {
                if (balanceOwed.containsKey(payees.get(j))) {
                    // Add the value of items[i] here (make sure to divide by payees.size())
                    balanceOwed.put(payees.get(j), balanceOwed.get(payees.get(j)) + (carAmount - items.get(i).getDiscount()) / payees.size()); 
                }  
                
                else {
                    // Should add a new key and value after subtracting the item's discount amount
                    balanceOwed.put(payees.get(j), (carAmount - items.get(i).getDiscount()) / payees.size());    
                }
                
            }
        }

        return balanceOwed; 
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Have user input the number of items to be split
        System.out.println("Welcome to the Bill Splitter!\nHow many items are on the bill?");
        int itemCount = Integer.parseInt(input.nextLine());

        List<Item> items = listItems(itemCount, input);

        // Check to see if there is a discount to be calculated
        System.out.println("What is the balance due on the bill?");
        double balance = input.nextDouble();
        input.close();  // Scanner no longer necessary

        // TODO: Upgrade function --> Does a discount need to be calculated?
        calcDiscount(items, balance);

        // Map function to print who owes what
        Map<String, Double> balanceOwed = splitBalance(items);

        // Print output for user --> TODO: Make button for printing?
        double check = 0.0;
        System.out.println("\nEach person owes: ");
        for (Map.Entry<String, Double> iter : balanceOwed.entrySet()) {
            System.out.printf("%s: $%.2f%n", iter.getKey(), iter.getValue());

            // Checks and Balances
            check += iter.getValue();
        }

        // TODO: Add this to test file
        String checkValue = String.format("%.2f", check);
        String balanceValue = String.format("%.2f", balance);

        System.out.println("checkValue: " + checkValue);
        System.out.println("balanceValue: " + balanceValue);

        // TODO: Compare as strings formatted to 2 decimal values
        if (checkValue.equals(balanceValue)) 
            System.out.println("\nCongrats! Your insurance bill has been split fairly!");
        else
            System.out.println("\nSomeone fucked up somewhere!");

    }
}
